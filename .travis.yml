# Copyright (c) 2018, S.D. Cherukuri, Delft University of Technology (srikarad007@gmail.com)
# Distributed under the MIT License.
# See accompanying file LICENSE.md or copy at http://opensource.org/licenses/MIT

language: cpp

sudo: false

compiler:
  - gcc
  - clang

env:
  global:
    - secure: "aMh+niXXk2m2YvuHC/xVo67wm9hw1+/yUnoqBxPmK5hVzWTefSjYM+sNCZBxybskFg04aBcNt6BycAeyp4+nhiYbw2x45Sxp60Qk6u1h9m4+dvisxCZuftOt8ZbGxCKxXtbANqOg9b7b0b6986506SPD8d7kXG+Q99tN9kf71fE="
  matrix:
    - BUILD_TYPE=Debug
    - BUILD_TYPE=Release

matrix:
  exclude:
    - compiler: clang
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan
    - compiler: gcc
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan BUILD_TYPE=Release

addons:
  coverity_scan:
    project:
      name: "kartikkumar/dss_adcs"
      description: "Build submitted via Travis CI"
    notification_email: me@kartikkumar.com
    build_command_prepend: "mkdir build; cd build; cmake -DPROJECT_NAME=dss_adcs -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on .."
    build_command: "make"
    branch_pattern: coverity_scan

before_install:
  - bash scripts/install_cmake.sh
  - bash scripts/install_doxygen.sh
  - chmod ugo+x scripts/check_doxygen.sh
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      pip install --user cpp-coveralls;
    fi

before_script::
  - ls -R $HOME/cmake
  - ls -R $HOME/doxygen

script:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ]; then
      mkdir build;
      cd build;
      $HOME/cmake/bin/cmake -DPROJECT_NAME=dss_adcs -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on ..;
      # $HOME/cmake/bin/cmake -DPROJECT_NAME=dss_adcs -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on -DDOXYGEN_EXECUTABLE=$HOME/doxygen/bin/doxygen -DBUILD_DOXYGEN_DOCS=on ..;
      make;
      ctest -V;
      ../scripts/check_doxygen.sh;
    fi

after_success:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*" -E ".*src/main.cpp.*";
    fi
